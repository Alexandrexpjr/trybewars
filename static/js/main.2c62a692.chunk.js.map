{"version":3,"sources":["context/PlanetsContext.js","components/FilterByName.jsx","components/Select.jsx","components/FilterNumericValues.jsx","components/Order.jsx","components/Table.jsx","services/index.js","context/PlanetsProvider.js","App.js","index.js"],"names":["PlanetsContext","createContext","FilterByName","setFilterName","useContext","type","name","id","onChange","target","value","data-testid","placeholder","Select","filterToRemove","filters","setColumn","filteredFilters","filter","f","includes","useEffect","map","key","FilterByNumericValues","filterByNumericValues","setFilterByNumericValues","useState","column","columns","setColumns","comparison","setComparison","setValue","defaultValue","onClick","renderNumericFilter","current","operator","number","Math","random","toString","className","c","element","Order","setOrder","sort","setSort","handleRadioChange","checked","Table","data","filterByName","order","firstPlanet","Object","keys","filterPlanet","planet","filtersArray","forEach","header","currentFilter","parseInt","filterNumeric","push","every","planetFeature","feature","sortType","array","a","b","sortColumns","unfilteredPlanet","residents","planetInfos","values","planetInfo","index","mov","url","fetchPlanets","fetch","then","response","json","planets","results","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","movies","films","film","get_movie","movie","split","movieNumber","length","MOVIE_ENUM","1","2","3","4","5","6","PlanetsProvider","children","setPlanets","filterName","fetchData","providerValue","Provider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c62a692.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst PlanetsContext = createContext();\n\nexport default PlanetsContext;\n","import React, { useContext } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\n\nfunction FilterByName() {\n  const { setFilterName } = useContext(PlanetsContext);\n\n  return (\n    <input\n      type=\"text\"\n      name=\"name\"\n      id=\"filter-name\"\n      onChange={ ({ target }) => setFilterName(target.value) }\n      data-testid=\"name-filter\"\n      placeholder='Search by name'\n    />\n  );\n}\n\nexport default FilterByName;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Select({ filterToRemove, filters, setColumn }) {\n  const filteredFilters = filters.filter((f) => !filterToRemove.includes(f));\n\n  useEffect(() => {\n    setColumn(filteredFilters[0]);\n  }, []);\n\n  return (\n    <select\n      name=\"column\"\n      id=\"column\"\n      data-testid=\"column-filter\"\n      onChange={ ({ target }) => setColumn(target.value) }\n    >\n      {\n        filteredFilters\n          .map((filter) => (\n            <option value={ filter } key={ filter }>{ filter }</option>\n          ))\n      }\n\n    </select>\n  );\n}\n\nSelect.propTypes = {\n  filterToRemove: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  setColumn: PropTypes.func.isRequired,\n};\n\nexport default Select;\n","import React, { useContext, useState } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\nimport Select from './Select';\n\nexport const filters = ['population', 'orbital_period', 'diameter',\n  'rotation_period', 'surface_water'];\n\nfunction FilterByNumericValues() {\n  const { filterByNumericValues, setFilterByNumericValues } = useContext(PlanetsContext);\n  const [column, setColumn] = useState('population');\n  const [columns, setColumns] = useState([]);\n  const [comparison, setComparison] = useState('greater than');\n  const [value, setValue] = useState(0);\n\n  const hexadecimal = 16;\n\n  const renderNumericFilter = (filterToRemove = ['']) => (\n    <div>\n      <Select\n        filterToRemove={ filterToRemove }\n        filters={ filters }\n        setColumn={ setColumn }\n      />\n\n      <select\n        name=\"comparison\"\n        id=\"comparison\"\n        data-testid=\"comparison-filter\"\n        onChange={ ({ target }) => setComparison(target.value) }\n      >\n        <option value=\"greater than\">greater than</option>\n        <option value=\"less than\">less than</option>\n        <option value=\"equals\">equals</option>\n      </select>\n\n      <input\n        type=\"number\"\n        name=\"value\"\n        id=\"input-value\"\n        data-testid=\"value-filter\"\n        onChange={ ({ target }) => setValue(target.value) }\n        defaultValue=\"0\"\n      />\n\n      <button\n        onClick={ () => {\n          setFilterByNumericValues([...filterByNumericValues,\n            { column, comparison, value }]);\n          setColumns([...columns, column]);\n        } }\n        data-testid=\"button-filter\"\n        type=\"button\"\n      >\n        Filter\n      </button>\n    </div>\n  );\n\n  return (\n    <div>\n      {\n        renderNumericFilter(columns)\n      }\n\n      {\n        filterByNumericValues\n          .map(({ column: current, comparison: operator, value: number }) => (\n            current\n              && (\n                <div data-testid=\"filter\" key={ Math.random().toString(hexadecimal) }>\n                  <span className='current-filter-span'>\n                    {current}\n                    {' '}\n                    { operator }\n                    {' '}\n                    { number }\n                  </span>\n                  <button\n                    type=\"button\"\n                    className='current-filter-delete-btn'\n                    onClick={ () => {\n                      setColumns(columns.filter((c) => c !== current));\n                      setFilterByNumericValues(filterByNumericValues\n                        .filter((element) => element.column !== current));\n                    } }\n                  >\n                    X\n                  </button>\n                </div>)\n          ))\n      }\n\n    </div>\n  );\n}\n\nexport default FilterByNumericValues;\n","import React, { useContext, useState } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\nimport { filters } from './FilterNumericValues';\n\nfunction Order() {\n  const { setOrder } = useContext(PlanetsContext);\n  const [sort, setSort] = useState('ASC');\n  const [column, setColumn] = useState('population');\n\n  const handleRadioChange = ({ target }) => {\n    if (target.checked) {\n      return setSort(target.value);\n    }\n  };\n\n  const handleSelectChange = ({ target }) => setColumn(target.value);\n\n  return (\n    <div>\n      <select id=\"orderSelect\" data-testid=\"column-sort\" onChange={ handleSelectChange }>\n        {\n          filters.map((filter) => (\n            <option key={ Math.random() } value={ filter }>{ filter }</option>\n          ))\n        }\n      </select>\n      <span>Crescent</span>\n      <input\n        type=\"radio\"\n        className='radio-btn'\n        name=\"order\"\n        value=\"ASC\"\n        data-testid=\"column-sort-input-asc\"\n        onChange={ handleRadioChange }\n      />\n\n      <span>Decrescent</span>\n      <input\n        type=\"radio\"\n        className='radio-btn'\n        name=\"order\"\n        value=\"DESC\"\n        data-testid=\"column-sort-input-desc\"\n        onChange={ handleRadioChange }\n      />\n\n      <button\n        type=\"button\"\n        data-testid=\"column-sort-button\"\n        onClick={ () => setOrder({ column, sort }) }\n      >\n        Sort\n      </button>\n    </div>\n  );\n}\n\nexport default Order;\n","import React, { useContext } from 'react';\n\nimport PlanetsContext from '../context/PlanetsContext';\n\nfunction Table() {\n  const { data, filterByName, filterByNumericValues, order } = useContext(PlanetsContext);\n  const { column, sort } = order;\n  const { name } = filterByName;\n  const firstPlanet = Object.keys(data[0]);\n  const hexadecimal = 16;\n\n  const filterNumeric = (key, operator, number) => {\n    const basis = 10;\n    switch (operator) {\n    case 'greater than':\n      return parseInt(key, basis) > parseInt(number, basis);\n    case 'less than':\n      return parseInt(key, basis) < parseInt(number, basis);\n    case 'equals':\n      return parseInt(key, basis) === parseInt(number, basis);\n    default:\n      return true;\n    }\n  };\n\n  const sortColumns = (key, sortType, array) => {\n    switch (sortType) {\n    case 'ASC':\n      return array.sort((a, b) => a[key] - b[key]);\n    case 'DESC':\n      return array.sort((a, b) => b[key] - a[key]);\n    default:\n\n      return array.sort((a, b) => {\n        const minusOne = -1;\n        if (a.name < b.name) { return minusOne; }\n        if (a.name > b.name) { return 1; }\n        return 0;\n      });\n    }\n  };\n\n  const filterPlanet = (planet) => {\n    const filtersArray = [];\n    filterByNumericValues.forEach(({ column: header, comparison, value }) => {\n      const currentFilter = filterNumeric(planet[header], comparison, value);\n      filtersArray.push(currentFilter);\n    });\n    return filtersArray.every((f) => f);\n  };\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          {\n            firstPlanet\n              .filter((planetFeature) => planetFeature !== 'residents')\n              .map((feature) => (\n                <th key={ feature }>{ feature }</th>\n              ))\n          }\n        </tr>\n      </thead>\n      <tbody>\n        {\n          sortColumns(column, sort, data)\n            .filter((unfilteredPlanet) => unfilteredPlanet.name.includes(name)\n              && filterPlanet(unfilteredPlanet))\n            .map((planet) => {\n              delete planet.residents;\n              const planetInfos = Object.values(planet);\n              return (\n                <tr key={ Math.random() }>\n                  {\n                    planetInfos.map((planetInfo, index) => (\n                      <td\n                        key={ (Math.random()).toString(hexadecimal) }\n                        data-testid={ index === 0 ? 'planet-name' : '' }\n                      >\n                        {\n                          typeof(planetInfo) == 'object' ? <ul className='movie-list'>{planetInfo.map((mov) => <li>{mov}</li>)}</ul> :\n                          planetInfo\n                        }\n                      </td>\n                    ))\n                  }\n                </tr>\n              );\n            })\n        }\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;","const url = 'https://swapi-trybe.herokuapp.com/api/planets/';\n\nexport default async function fetchPlanets() {\n  return fetch(url)\n    .then((response) => response.json())\n    .then((planets) => ({\n      data: planets.results.map((planet) => {\n        const { \n          name,\n          rotation_period,\n          orbital_period,\n          diameter,\n          climate,\n          gravity,\n          terrain,\n          surface_water,\n          films,\n          } = planet;\n\n        const newMovies = films.map(film => get_movie(film))\n        return { name, rotation_period, orbital_period, diameter, climate, gravity, terrain, surface_water, movies: newMovies}\n      }),\n    }))\n}\n\nfunction get_movie(url) {\n  const movie = url.split('/');\n  const movieNumber = movie[movie.length - 2]\n  return MOVIE_ENUM[movieNumber]\n}\n\nconst MOVIE_ENUM = {\n  1: 'Episode I - The Phantom Menace',\n  2: 'Episode II - Attack of the Clones',\n  3: 'Episode III - Revenge of the Sith',\n  4: 'Episode IV - A New Hope',\n  5: 'Episode V - The Empire Strikes Back',\n  6: 'Episode VI - Return of the Jedi',\n}","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport fetchPlanets from '../services';\nimport PlanetsContext from './PlanetsContext';\n\nfunction PlanetsProvider({ children }) {\n  const [planets, setPlanets] = useState();\n  const [filterName, setFilterName] = useState('');\n  const [\n    filterByNumericValues,\n    setFilterByNumericValues,\n  ] = useState([{ column: '', comparison: '', value: '' }]);\n  const [order, setOrder] = useState({\n    column: '',\n    sort: '',\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      const results = await fetchPlanets();\n      setPlanets(results);\n    }\n    fetchData();\n  }, []);\n\n  const providerValue = {\n    ...planets,\n    filterByName: { name: filterName },\n    setFilterName,\n    filterByNumericValues,\n    setFilterByNumericValues,\n    order,\n    setOrder,\n  };\n\n  return (\n    <PlanetsContext.Provider value={ providerValue }>\n      { planets ? children : 'Loading...'}\n    </PlanetsContext.Provider>\n  );\n}\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element.isRequired).isRequired,\n};\n\nexport default PlanetsProvider;\n","import React from 'react';\nimport './App.css';\nimport FilterByName from './components/FilterByName';\nimport FilterByNumericValues from './components/FilterNumericValues';\nimport Order from './components/Order';\nimport Table from './components/Table';\nimport PlanetsProvider from './context/PlanetsProvider';\n\nfunction App() {\n  return (\n    <PlanetsProvider>\n      <h1>TrybeWars</h1>\n      <div id='filters-div'>\n        <FilterByName />\n        <FilterByNumericValues />\n        <Order />\n      </div>\n      <Table />\n    </PlanetsProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}